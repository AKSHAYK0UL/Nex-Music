<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.koul.nexmusic">

    <!-- Required permissions -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" />

    <application
        android:name="${applicationName}"
        android:label="Nex Music"
        android:icon="@mipmap/launcher_icon"
        android:usesCleartextTraffic="true"
        android:enableOnBackInvokedCallback="true">

        <!-- Main Activity -->
        <activity
            android:name="com.ryanheise.audioservice.AudioServiceActivity"
            android:exported="true"
            android:launchMode="singleInstance"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">

            <!-- This meta-data is used to set the window background until Flutter initializes -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@drawable/ic_notification" />

            <!-- Deep Link / Intent Filters -->
            <intent-filter android:autoVerify="true">
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="https" android:host="music.youtube.com" />
                <data android:scheme="https" android:host="m.youtube.com" />
                <data android:scheme="https" android:host="www.youtube.com" />
                <data android:scheme="https" android:host="youtu.be" />
                <data android:scheme="https" android:host="youtube.com" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
            </intent-filter>

            <!-- Example for a custom deep link -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="flutterDeepLink" android:host="flutter-deep-link" />
            </intent-filter>

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- AudioService to manage background playback and notifications -->
        <!-- <service
            android:name="com.ryanheise.audioservice.AudioService"
            android:enabled="true"
            android:stopWithTask="false" 
            android:foregroundServiceType="mediaPlayback"
            android:exported="true"
            tools:ignore="Instantiatable">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service> -->
        <service
  android:name="com.ryanheise.audioservice.AudioService"
  android:enabled="true"
  android:stopWithTask="false" 
  android:foregroundServiceType="mediaPlayback"
  android:exported="true"
  tools:ignore="Instantiatable">
  
  <intent-filter>
    <action android:name="android.media.browse.MediaBrowserService" />
  </intent-filter>
</service>

        <!-- Receiver to handle media button events -->
        <receiver
            android:name="com.ryanheise.audioservice.MediaButtonReceiver"
            android:exported="true"
            tools:ignore="Instantiatable">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <!-- Flutter Generated Plugin Registrant -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>

    <!-- Query required for Process Text support -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT" />
            <data android:mimeType="text/plain" />
        </intent>
    </queries>
</manifest>
